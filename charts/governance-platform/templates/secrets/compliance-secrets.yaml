{{- if .Values.global.secrets.createSecrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.secrets.complianceSecretName }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "governance-studio.labels" . | nindent 4 }}
type: Opaque
data:
  # Compliance Garage secrets
  {{- if .Values.global.secrets.values.compliance.databaseUrl }}
  DATABASE_URL: {{ .Values.global.secrets.values.compliance.databaseUrl | b64enc | quote }}
  {{- else }}
  {{- /* Generate database URL from PostgreSQL settings */ -}}
  DATABASE_URL: {{ printf "postgresql://%s:%s@%s:%d/%s" .Values.global.postgresql.username .Values.global.secrets.values.database.postgresPassword (printf "%s-postgresql" .Release.Name) (.Values.global.postgresql.port | int) .Values.global.postgresql.database | b64enc | quote }}
  {{- end }}

  {{- if .Values.global.secrets.values.compliance.redisUrl }}
  REDIS_URL: {{ .Values.global.secrets.values.compliance.redisUrl | b64enc | quote }}
  {{- else }}
  {{- /* Generate Redis URL from Redis settings */ -}}
  REDIS_URL: {{ printf "redis://%s-redis-master:%d" .Release.Name (.Values.global.redis.port | int) | b64enc | quote }}
  {{- end }}

  {{- if .Values.global.secrets.values.compliance.geminiApiKey }}
  GEMINI_API_KEY: {{ .Values.global.secrets.values.compliance.geminiApiKey | b64enc | quote }}
  {{- end }}

  # Database credentials
  {{- if .Values.global.secrets.values.database.postgresPassword }}
  password: {{ .Values.global.secrets.values.database.postgresPassword | b64enc | quote }}
  postgres-password: {{ .Values.global.secrets.values.database.postgresPassword | b64enc | quote }}
  postgresPassword: {{ .Values.global.secrets.values.database.postgresPassword | b64enc | quote }}
  {{- end }}

  {{- if .Values.global.secrets.values.database.redisPassword }}
  redisPassword: {{ .Values.global.secrets.values.database.redisPassword | b64enc | quote }}
  {{- end }}
{{- end }}
